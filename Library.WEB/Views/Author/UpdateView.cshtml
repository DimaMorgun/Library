@model Library.ViewModelLayer.ViewModels.AuthorBooksViewModel

@using (Html.BeginForm("Update", "Author", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Author</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Author.AuthorId)
        <div class="form-group">
            @Html.LabelFor(model => model.Author.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Author.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Author.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Author.Birthday, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Author.Birthday, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Author.Birthday, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Author.Deathday, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Author.Deathday, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Author.Deathday, "", new { @class = "text-danger" })
            </div>
        </div>

        <div id="example" role="application" class="col-md-10">
            <div class="demo-section k-content">
                <label for="books">@Html.LabelFor(model => model.Books)</label>
                <select id="books" name="Author.SelectedBooks" multiple="multiple" data-placeholder="Select Authors">
                    @foreach (var book in Model.Books)
                    {
                        <option @(Model.BookAuthors.FirstOrDefault(x => x.BookId == book.BookId && x.AuthorId == Model.Author.AuthorId) != null ? "selected" : "") value="@book.BookId">@book.Name</option>
                    }
                </select>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Update" class="btn btn-warning" /> |
                @Html.ActionLink("Back to List", "Index")
            </div>
        </div>
    </div>
}